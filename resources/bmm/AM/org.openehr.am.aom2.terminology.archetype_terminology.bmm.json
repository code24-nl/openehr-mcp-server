{
    "name": "ARCHETYPE_TERMINOLOGY",
    "documentation": "Local terminology of an archetype. This class defines the semantics of the terminology of an archetype.",
    "properties": {
        "is_differential": {
            "name": "is_differential",
            "documentation": "True if this terminology only contains terms relating to a differential specialisation of the owning artefact, rather than a complete set.",
            "is_mandatory": true,
            "type": "Boolean"
        },
        "original_language": {
            "name": "original_language",
            "documentation": "Original language of the terminology, as set at artefact creation or parsing time; must be a code in the ISO 639-1 2 character language code-set.\n",
            "is_mandatory": true,
            "type": "String"
        },
        "concept_code": {
            "name": "concept_code",
            "documentation": "Term code defining the meaning of the artefact as a whole, and always used as the id-code on the root node of the artefact. Must be defined in the `_term_definitions_` property.",
            "is_mandatory": true,
            "type": "String"
        },
        "term_definitions": {
            "_type": "P_BMM_GENERIC_PROPERTY",
            "name": "term_definitions",
            "documentation": "Directory of term definitions as a two-level table. The outer hash keys are language codes, e.g. `\"en\"`, `\"de\"`, while the inner hash keys are term codes, e.g. `\"id17\"`, `\"at4\"`.",
            "is_mandatory": true,
            "type_def": {
                "root_type": "Hash",
                "generic_parameter_defs": [
                    {
                        "type": "String"
                    },
                    {
                        "_type": "P_BMM_GENERIC_TYPE",
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "ARCHETYPE_TERM"
                        ]
                    }
                ]
            }
        },
        "term_bindings": {
            "_type": "P_BMM_GENERIC_PROPERTY",
            "name": "term_bindings",
            "documentation": "Directory of bindings to external terminology codes and value sets, as a two-level table. The outer hash keys are terminology ids, e.g. `\"SNOMED_CT\"`, and the inner hash keys are constraint codes, e.g. `\"at4\"`, `\"ac13\"` or paths. The indexed `Uri` objects represent references to externally defined resources, either terms, ontology concepts, or terminology subsets / ref-sets.",
            "type_def": {
                "root_type": "Hash",
                "generic_parameter_defs": [
                    {
                        "type": "String"
                    },
                    {
                        "_type": "P_BMM_GENERIC_TYPE",
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "Uri"
                        ]
                    }
                ]
            }
        },
        "owner_archetype": {
            "name": "owner_archetype",
            "documentation": "Archetype that owns this terminology.",
            "is_mandatory": true,
            "type": "ARCHETYPE"
        },
        "value_sets": {
            "_type": "P_BMM_CONTAINER_PROPERTY",
            "name": "value_sets",
            "documentation": "Archetype-local value sets, each keyed by value-set id, i.e. an ac-code.",
            "type_def": {
                "container_type": "List",
                "type": "String"
            },
            "cardinality": {
                "lower": 0,
                "upper_unbounded": true
            }
        },
        "terminology_extracts": {
            "_type": "P_BMM_GENERIC_PROPERTY",
            "name": "terminology_extracts",
            "documentation": "Directory of extracts of external terminologies, as a two-level table. The outer hash keys are terminology ids, e.g. `\"SNOMED_CT\"`, while the inner hash keys are term codes or code-phrases from the relevant terminology, e.g. `\"10094842\"`.",
            "type_def": {
                "root_type": "Hash",
                "generic_parameter_defs": [
                    {
                        "type": "String"
                    },
                    {
                        "_type": "P_BMM_GENERIC_TYPE",
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "ARCHETYPE_TERM"
                        ]
                    }
                ]
            }
        }
    },
    "functions": {
        "specialisation_depth": {
            "name": "specialisation_depth",
            "documentation": "Specialisation depth of this artefact. Unspecialised artefacts have depth 0, with each additional level of specialisation adding 1 to the specialisation_depth.",
            "result": {
                "type": "Integer"
            }
        },
        "id_codes": {
            "name": "id_codes",
            "documentation": "List of all id codes in the terminology., i.e. the 'id' codes in an ADL archetype, which are the `_node_id_` values on `C_OBJECT` descendants.",
            "result": {
                "_type": "P_BMM_CONTAINER_TYPE",
                "container_type": "List",
                "type": "String"
            }
        },
        "value_codes": {
            "name": "value_codes",
            "documentation": "List of all value term codes in the terminology, i.e. the 'at' codes in an ADL archetype, which are used as possible values on terminological constrainer nodes.",
            "result": {
                "_type": "P_BMM_CONTAINER_TYPE",
                "container_type": "List",
                "type": "String"
            },
            "is_nullable": true
        },
        "value_set_codes": {
            "name": "value_set_codes",
            "documentation": "List of all value set codes in the terminology defining value sets. These correspond to the 'ac' codes in an ADL archetype.",
            "result": {
                "_type": "P_BMM_CONTAINER_TYPE",
                "container_type": "List",
                "type": "String"
            },
            "is_nullable": true
        },
        "has_language": {
            "name": "has_language",
            "documentation": "True if language `_a_lang_` is present in archetype terminology. ",
            "parameters": {
                "a_lang": {
                    "name": "a_lang",
                    "type": "String"
                }
            },
            "result": {
                "type": "Boolean"
            }
        },
        "has_terminology": {
            "name": "has_terminology",
            "documentation": "True if there are bindings to terminology `_a_terminology_id_` present.",
            "parameters": {
                "a_terminology_id": {
                    "name": "a_terminology_id",
                    "type": "String"
                }
            },
            "result": {
                "type": "Boolean"
            }
        },
        "has_term_code": {
            "name": "has_term_code",
            "documentation": "True if code `_a_code_` defined in this terminology.",
            "parameters": {
                "a_code": {
                    "name": "a_code",
                    "type": "String"
                }
            },
            "result": {
                "type": "Boolean"
            }
        },
        "term_definition": {
            "name": "term_definition",
            "documentation": "Term definition for a code, in a specified language. ",
            "parameters": {
                "a_lang": {
                    "name": "a_lang",
                    "type": "String"
                },
                "a_code": {
                    "name": "a_code",
                    "type": "String"
                }
            },
            "pre_conditions": {
                "Pre": "has_term-definition (a_lang, a_code)"
            },
            "result": {
                "type": "ARCHETYPE_TERM"
            }
        },
        "term_binding": {
            "name": "term_binding",
            "documentation": "Binding of constraint corresponding to `_a_code_` in target external terminology `_a_terminology_id_`, as a string, which is usually a formal query expression.",
            "parameters": {
                "a_terminology": {
                    "name": "a_terminology",
                    "type": "String"
                },
                "a_code": {
                    "name": "a_code",
                    "type": "String"
                }
            },
            "pre_conditions": {
                "Pre": "has_term_binding (a_terminology_id, a_code)"
            },
            "result": {
                "type": "Uri"
            }
        },
        "terminologies_available": {
            "name": "terminologies_available",
            "documentation": "List of terminologies to which term or constraint bindings exist in this terminology, computed from bindings.",
            "result": {
                "_type": "P_BMM_CONTAINER_TYPE",
                "container_type": "List",
                "type": "String"
            }
        },
        "terminology_extract_term": {
            "name": "terminology_extract_term",
            "documentation": "Return an `ARCHETYPE_TERM` from specified terminology extract, for specified term code.",
            "parameters": {
                "a_terminology_id": {
                    "name": "a_terminology_id",
                    "type": "String"
                },
                "a_code": {
                    "name": "a_code",
                    "type": "String"
                }
            },
            "pre_conditions": {
                "Pre": "has_terminology_extract (a_terminology_id) and has_terminology_extract_code (a_code)"
            },
            "result": {
                "type": "ARCHETYPE_TERM"
            }
        },
        "has_terminology_extract": {
            "name": "has_terminology_extract",
            "documentation": "True if there is a provided terminology extract present.",
            "parameters": {
                "a_terminology_id": {
                    "name": "a_terminology_id",
                    "type": "String"
                }
            },
            "result": {
                "type": "Boolean"
            }
        },
        "languages_available": {
            "name": "languages_available",
            "documentation": "List of languages in which terms in this terminology are available.",
            "result": {
                "_type": "P_BMM_CONTAINER_TYPE",
                "container_type": "List",
                "type": "String"
            }
        }
    },
    "invariants": {
        "Original_language_validity": "code_set (Code_set_id_languages).has_concept_id (original_language)",
        "concept_code_validity": "id_codes.has (concept_code)",
        "Term_bindings_validity": "bindings /= void implies not bindings.is_empty",
        "Parent_archetype_valid": "parent_archetype.terminology = Current"
    }
}
